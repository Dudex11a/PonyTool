:root {
    --margin1: 10px;
    --padding1: 10px;
    --radius1: 3px;
    --color_lowest: white;
    --color_highest: black;
    --color_primary: #0ad150;
    --color_primary_dark: #03752b;
    --color_second: #f2fcfc;
    --color_bad: rgb(230, 67, 67);
    --btn_color_off: darkgrey;
    --transition_time: 0.05s;
    --basic_border: var(--color_primary) 1px solid;
}

/* Defaults */
* {
    margin: 0;
    padding: 0;
    font-family: Verdana, Geneva, sans-serif;
}

body {
    color: var(--color_highest);
    background-color: var(--color_lowest);
}

main {
    background-color: var(--color_second);
    background-image: url("../img/background.png");
    background-repeat: repeat;
    background-attachment: fixed;
    /* While scrolling backgrounds are cool it makes the Firefox battery usage on my Mac triple. */
    animation-name: _;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-duration: 5s;
    /*  */
}

@keyframes background_scroll {
    from {background-position: 0 0;}
    to {background-position: 50px 50px;}
}

button {
    background-color: var(--color_primary);
    transition: background-color var(--transition_time);
    padding: calc(var(--padding1) / 2) var(--padding1);
    color: var(--color_lowest);
    border-color: var(--color_primary_dark);
    border-radius: var(--radius1);
}

button:active {
    background-color: var(--color_primary_dark);
    transition: background-color var(--transition_time);
}

/* The on and off is mainly used for buttons.
I don't do "button .on" because the default button color overwrites the ".on" color */
.on {
    background-color: var(--color_primary);
}

.off {
    background-color: var(--btn_color_off);
}

input:checked {
    color: var(--color_primary);
}

a {
    color: var(--color_primary);
}

a:hover {
    color: var(--color_primary_dark);
}

header {
    background-color: var(--color_lowest);
    padding: 5px;
    text-align: center;
}

header h1 {
    font-size: 30pt;
}

footer {
    background-color: var(--color_lowest);
    border-top: var(--basic_border);
}

nav {
    background-color: var(--color_lowest);
    padding: 5px;
    display: flex;
    justify-content: center;
    border-top: var(--color_primary) 1px dashed;
    border-bottom: var(--basic_border);
}

nav button {
    margin: 5px
}

/* This is a class instead of a css variable so I can easily resize it if the screen changes size.*/
.medium_width {
    width: 50vw;
    min-width: 600px;
}

@media only screen and (max-width: 600px) {
    .medium_width {
        /* Without the "!important" other "padding" will mess with this size */
        padding: 0 5% !important;
        min-width: 90% !important;
    }
}

.small_width {
    width: 30vw;
    min-width: 300px;
}

@media only screen and (max-width: 300px) {
    .small_width {
        width: 100%;
        min-width: 100%;
    }
}

#loading {
    position:fixed;
    padding:0;
    margin:0;

    top:0;
    left:0;

    text-overflow: clip;

    width: 100%;
    height: 100%;
    background-color: rgba(255,255,255,0.5);
}

#loading * {
    font-size: 200%;
    text-align: center;
    position: absolute;
    top: 38%;
    left: 30%;
    width: 40%;
    border: var(--basic_border);
    border-radius: var(--radius1);
    background-color: #FFF;
}

#credit {
    font-size: 9px;
    display: block;
    position: fixed;
    padding: 3px 3px 1px 3px;
    text-align: right;
    bottom: 0;
    right: 0;
    background-color: var(--color_lowest);
    border-top: var(--basic_border);
    border-left: var(--basic_border);
    border-top-left-radius: var(--radius1);
}

#adopt_container {
    margin: 0 auto;
    padding: var(--padding1);
    display: block;
    text-align: center;
    background-color: var(--color_second);
}

#results_container {
    margin: 0;
    padding: var(--padding1);
    background-color: var(--color_second);
    border-radius: var(--radius1);
}

#results_container .copy_all_button {
    font-size: 16pt;
    margin: 0 auto;
    padding: var(--padding1) calc(var(--padding1) * 2);
    display: block;
}

#results {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#results > div {
    display: block;
    text-align: center;
    width: 360px;
    margin: var(--margin1);
    padding: var(--padding1);
}

#results tr {
    display: flex;
}

#results tr td {
    display: block;
    text-align: left;
    padding: 3px;
    border-style: solid;
    border-width: 1px;
    border-radius: 3px;
}

#results .table_key {
    width: 30%;
}

#results .table_value {
    width: 70%;
}

#results .copy_button {
    width: 100%;
}

.clear_box {
    margin: var(--margin1);
    padding: var(--padding1);
    border-radius: var(--radius1);
    border: 2px solid var(--color_primary);
    background-color: var(--color_lowest);
}

#breed_container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#breed_container > div {
    width: 360px;
    margin: var(--margin1);
    padding: var(--padding1);
}

#breed_container > div > button {
    /* width: 100%; */
    margin: var(--margin1) auto;
}

#breed_container .parent_param {
    border-bottom: var(--basic_border);
    margin-bottom: var(--margin1);
}

#breed_container input, #breed_container select, #items select {
    width: 70%;
}

.box1 {
    margin: var(--margin1);
    padding: var(--padding1);
    border-radius: var(--radius1);
    border: 3px solid var(--light);
    border-color: rgba(0,0,0,.125);
    background-color: #FFF;
}

.parent_param {
    border-bottom: 1px solid var(--gray);
    padding-bottom: 3px;
    border-radius: var(--radius1);
}

.select_multi span, .select_multi p {
    font-size: 20px;
}

.select_multi button {
    border-radius: var(--radius1);
    padding: calc(var(--padding1) / 3) var(--padding1);
    margin: calc(var(--margin1) / 2);
}

.stats {
    display: flex;
}

.stats > div {
    /* 7 is the number of existing stats */
    width: calc(100% / 7);
}

.add_button {
    background-color: var(--color_primary);
}

.close_button {
    background-color: var(--color_bad);
}

#items {
    margin: var(--margin1) auto;
}

#roll_container {
    margin: 0 auto;
    display: flex;
    justify-content: center;
    background-color: var(--color_second);
    border-radius: var(--radius1);
    padding: var(--padding1);
}

#roll_container * {
    margin: 2px;
}

#change_log {
    margin: 0 auto;
    padding: var(--padding1);
    display: block;
}

/* Might fix this up at some point so there aren't so many divs.
 This is for the individual changes */
#change_log > div > div > div {
    padding-bottom: var(--padding1);
    margin-bottom: var(--margin1);
    border-bottom: darkgray solid 1px;
}

.pony_db {
    visibility: hidden;
}

#farm_container, #farm_message {
    padding: var(--padding1);
    text-align: center;
    margin: 0 auto;
    background-color: var(--color_second);
}

#farm_message button {
    margin: var(--margin1);
}

#farm_container select {
    margin: 0 auto 0 auto;
    width: 200px;
}

#options_container {
    background-color: var(--color_second);
    margin: 0 auto;
}

#options_container > div {
    display: flex;
    border-bottom: var(--basic_border);
    border-radius: var(--radius1);
    padding: 1px;
    margin: 1px;
}

#options_container > div > * {
    padding: var(--padding1);
}

/* Pony Input extra parameters */
.pi_extra {
    display: flex;
    flex-flow: column;
}

.hidden {
    /* This is all important so that it really will be hidden. */
    margin: 0 !important;
    padding: 0 !important;
    height: 0 !important;
    width: 0 !important;
    visibility: hidden !important;
}